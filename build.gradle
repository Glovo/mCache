buildscript {
    ext.vKotlin = '1.1.60'
    ext.readVersion = {
        def versionFile = new File(project.rootDir, 'version.properties')
        def version = new Properties()
        def stream
        try {
            stream = new FileInputStream(versionFile)
            version.load(stream)
        } catch (FileNotFoundException ignore) {
        } finally {
            if (stream != null) stream.close()
        }

        def build = 'mcache'

        if (!version[build]) {
            version[build] = "0"
        }

        version[build] = (version[build].toInteger() + 1).toString()
        version.store(versionFile.newWriter(), null)
        return version
    }

    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0-alpha04'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$vKotlin"
    }
}

ext {
    vCode = readVersion()["mcache"] as int
    vName = (vCode / 1000 / 100 as int) +
            "." + (vCode / 100 as int) % 1000 +
            "." + vCode % 100 /*+
            "-SNAPSHOT"*/
    vSDK = 27
    vMinSDK = 9
    vBuildTools = "27.0.1"

    vGson = "2.8.2"
    vSupport = "27.0.1"
    vRxAndroid = "2.0.1"
    vRxKotlin = "2.1.0"
    vLogger = "2.1.1"
    vJunit = "4.12"
    vMockKotlin = "1.5.0"
    vMock = "2.12.0"
    vEspresso = "3.0.1"

    vRetrofit = "2.3.0"
}

allprojects {
    tasks.withType(Javadoc) {
        enabled = false
    }
    repositories {
        jcenter()
        google()
    }
    ext."signing.keyId" = System.getenv('GPG_KEY_NAME')
    ext."signing.secretKeyRingFile" = "codesign.gpg"
    ext."signing.password" = System.getenv('GPG_KEY_PASS')
}


apply from: 'publish-tasks.gradle'